name: Multi-File Code Review with Ollama

on:
  push:
    branches:
      - main

jobs:
  ollama-review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Start Ollama container
        run: |
          docker run -d -p 11434:11434 --name ollama ollama/ollama
          sleep 50

      - name: Pull model via Ollama API
        run: |
          curl -s http://localhost:11434/api/pull -d '{"name": "codellama:7b-instruct"}'
          sleep 50

      - name: Prepare review prompt with code regeneration
        run: |
          echo "You are an expert code reviewer and software engineer." > prompt.txt
          echo "" >> prompt.txt
          echo "Please review and improve the following code files. For each file:" >> prompt.txt
          echo "- Identify bugs, security issues, and bad practices." >> prompt.txt
          echo "- Suggest improvements for readability, performance, and maintainability." >> prompt.txt
          echo "- Then, regenerate the improved version of the code." >> prompt.txt
          echo "- Suggest unit test cases that should be written for this code, including edge cases." >> prompt.txt
          echo "- Finally, state whether this code is ready to be committed to Git or if changes are required." >> prompt.txt
          echo "" >> prompt.txt

          for file in $(find . -type f \( -name "*.py" -o -name "*.txt" -o -name "Dockerfile" \) ! -name "prompt.txt"); do
            echo "===== File: $file =====" >> prompt.txt
            echo '```' >> prompt.txt
            cat "$file" >> prompt.txt
            echo '```' >> prompt.txt
            echo -e "\n\n" >> prompt.txt
          done


      - name: Run code review and regeneration with Ollama
        run: |
          encoded_prompt=$(jq -Rs . < prompt.txt)
          echo "{\"model\": \"codellama:7b-instruct\", \"prompt\": $encoded_prompt, \"stream\": false, \"options\": {\"num_ctx\": 8192}}" > payload.json
          curl -s -X POST http://localhost:11434/api/generate \
            -H "Content-Type: application/json" \
            -d @payload.json > response.json

          jq -r '.response' response.json > review.txt

          echo "=== Code Review Output ==="
          cat review.txt

      - name: Upload Review Output
        uses: actions/upload-artifact@v4
        with:
          name: ollama-review
          path: review.txt
